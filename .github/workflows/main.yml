# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Step

on:
  push:
    branches: ['master']

jobs:

  test-stage:
    runs-on: ubuntu-latest
    steps:
      - name: Running Tests
        uses: actions/checkout@v3
      - run: echo "runnig.................."

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    needs: ['test-stage']

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.G_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./
          # Note: tags has to be all lower-case
          tags: |
            shihab24/todo-list:${{ github.sha }} 
            ghcr.io/mohsinrubel/python-git-workflow-docker-argocd-kubernetes:${{ github.sha }}
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: ['build-and-push-docker-image']
    steps:
     - name: Checkout code
       uses: actions/checkout@v2

     - name: Login to Github Packages
       uses: docker/login-action@v2
       with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.G_TOKEN }}

     - uses: actions/checkout@v3
       with:
         repository: mohsinrubel/python-git-workflow-docker-argocd-kubernetes
         ref: 'main'
         token: ${{ secrets.G_TOKEN }}

     - name: Set image tag in values.yaml
       run: echo "imageTag:${{ github.sha }}" > k8s/values.yaml

     - name: setup git config
       run: |
          git config --global user.email "mohsinrubel.devops@gmail.com"
          git config --global user.name "mohsinrubel"
          sed -i "s#${{ github.actor }}.*#${{ github.actor }}/todo-list:${{ github.sha }}#g" k8s/deployment.yml
          git status
          git add *
          git commit -m "Update image tag to v${{ github.run_number }}"
     - run: echo ${{ github }}
     - run: git push origin master